package main.modelo;
// Generated 03-ene-2016 23:30:22 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PostComments generated by hbm2java
 */
@Entity
@Table(name = "post_comments", catalog = "dark_sky")
public class PostComments implements java.io.Serializable {

	private PostCommentsId id;
	private CuentasUsuario cuentasUsuario;
	private PostInfo postInfo;
	private String texto;
	private Date fechaCreacion;
	private Integer upLink;

	public PostComments() {
	}

	public PostComments(PostCommentsId id, CuentasUsuario cuentasUsuario, PostInfo postInfo, String texto, Date fechaCreacion) {
		this.id = id;
		this.cuentasUsuario = cuentasUsuario;
		this.postInfo = postInfo;
		this.texto = texto;
		this.fechaCreacion = fechaCreacion;
	}

	public PostComments(PostCommentsId id, CuentasUsuario cuentasUsuario, PostInfo postInfo, String texto, Date fechaCreacion, Integer upLink) {
		this.id = id;
		this.cuentasUsuario = cuentasUsuario;
		this.postInfo = postInfo;
		this.texto = texto;
		this.fechaCreacion = fechaCreacion;
		this.upLink = upLink;
	}

	@EmbeddedId

	@AttributeOverrides({ @AttributeOverride(name = "idComment", column = @Column(name = "ID_COMMENT", nullable = false, precision = 9, scale = 0) ),
		@AttributeOverride(name = "idPost", column = @Column(name = "ID_POST", nullable = false) ) })
	public PostCommentsId getId() {
		return this.id;
	}

	public void setId(PostCommentsId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "AUTOR", nullable = false)
	public CuentasUsuario getCuentasUsuario() {
		return this.cuentasUsuario;
	}

	public void setCuentasUsuario(CuentasUsuario cuentasUsuario) {
		this.cuentasUsuario = cuentasUsuario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_POST", nullable = false, insertable = false, updatable = false)
	public PostInfo getPostInfo() {
		return this.postInfo;
	}

	public void setPostInfo(PostInfo postInfo) {
		this.postInfo = postInfo;
	}

	@Column(name = "TEXTO", nullable = false, length = 400)
	public String getTexto() {
		return this.texto;
	}

	public void setTexto(String texto) {
		this.texto = texto;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "FECHA_CREACION", nullable = false, length = 19)
	public Date getFechaCreacion() {
		return this.fechaCreacion;
	}

	public void setFechaCreacion(Date fechaCreacion) {
		this.fechaCreacion = fechaCreacion;
	}

	@Column(name = "UP_LINK", precision = 9, scale = 0)
	public Integer getUpLink() {
		return this.upLink;
	}

	public void setUpLink(Integer upLink) {
		this.upLink = upLink;
	}

}
